name: CI/CD Pipeline

on: 
  [push, pull_request]

jobs: 
  test:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3

      - name: Configurar Python 
        uses: actions/setup-python@v4
        with: 
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Instalar dependencias 
        run: |
          python -m pip install --upgrade pip 
          if [ -f requirements.txt ]; then 
            pip install -r requirements.txt
          fi 

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      - name: Executar testes unit√°rios 
        run: |
          pytest -v --tb=short --cov=app --cov-report=term-missing --cov-report=xml
        continue-on-error: false

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: success()
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          
      - name: Test Results Summary
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "‚úÖ All tests passed successfully!"
          else
            echo "‚ùå Some tests failed. Check the logs above."
            exit 1
          fi

  build: 
    runs-on: ubuntu-latest
    needs: test
    if: success()
    steps: 
      - uses: actions/checkout@v3
      
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          
      - name: Verificar sintaxe Python
        run: |
          python -m py_compile app/*.py
          python -m py_compile tests/*.py
          echo "‚úÖ Python syntax check passed"

  deploy: 
    runs-on: ubuntu-latest
    needs: [test, build]
    if: success() && github.ref == 'refs/heads/main'
    steps: 
      - name: Simular Deploy 
        run: echo "üöÄ Deploy realizado com sucesso para produ√ß√£o"
        
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Instalar flake8
        run: pip install flake8
        
      - name: Executar an√°lise de c√≥digo com flake8
        run: |
          # Ignore some common warnings for this project
          flake8 app/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 app/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics 
