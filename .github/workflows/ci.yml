name: Continuous Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8
          
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV
        
      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 app/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 app/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          
      - name: Test with pytest
        run: |
          pytest -v --tb=short --cov=app --cov-report=term-missing --cov-report=xml --cov-report=html
        continue-on-error: false
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: success()
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          verbose: true
          
      - name: Archive test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results-${{ matrix.python-version }}
          path: |
            htmlcov/
            coverage.xml
            
      - name: Test Summary
        if: always()
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ All tests passed successfully!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Some tests failed. Please check the test logs." >> $GITHUB_STEP_SUMMARY
          fi
